<?php
	
// Functions for tracking the file usage of [[inline tags]].
require_once dirname(__FILE__) . '/includes/media_browser_ux.file_usage.inc';
require_once dirname(__FILE__) . '/includes/media_browser_ux.form.inc';

/**
 * Implements hook_init().
 */
function media_browser_ux_init() {
	drupal_add_library('media_browser_ux', 'media_browser_ux');
}
	
/**
 * Implements of hook_menu()
 */
function media_browser_ux_menu() {
	$items['admin/media_browser_ux/add_folder/%'] = array(
		'access callback' => TRUE,
		'title' => 'Opret mappe',
		'page callback' => 'drupal_get_form',
    'page arguments' => array('media_browser_ux_add_folder_form', 3),
	);
	$items['admin/media_browser_ux/delete_folder/%'] = array(
		'access callback' => TRUE,
		'title' => 'Slet mappe',
		'page callback' => 'drupal_get_form',
    'page arguments' => array('media_browser_ux_delete_folder_form', 3),
	);
  return $items;
}

/**
 * Implements hook_library().
 */
function media_browser_ux_library() {
  $path = drupal_get_path('module', 'media_browser_ux');
  $libraries['media_browser_ux'] = array(
    'title' => 'Media Browser UX',
    'version' => '1',
    'js' => array(
      $path . '/js/media_browser_ux.js' => array(),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_form_alter().
 */
function media_browser_ux_form_alter(&$form, &$form_state) {
		
	// File entity edit
	if($form['#form_id']=="file_entity_edit") {
		$form['destination']['#access'] = FALSE;		
		$form['preview'] = file_view_file($form['preview']['#file'], 'teaser');
		
		if(isset($form['field_file_image_title_text'])) {
		$form['field_file_image_title_text']["#prefix"] = "<p><a href='#' class='copy-alt-text'>Klon tekst <span class='icon-arrow-down'></span></a></p>";
		}
	}
	
	// File entity edit multiple
	if(strpos($form['#form_id'], 'media_edit_')!==FALSE) {
		$form['destination']['#access'] = FALSE;		
		$form['redirect']['#access'] = FALSE;		
		$form['preview'] = file_view_file($form['preview']['#file'], 'teaser');	
		
		if(isset($form['field_file_image_title_text'])) {
			$form['field_file_image_title_text']["#prefix"] = "<p><a href='#' class='copy-alt-text'>Klon tekst <span class='icon-arrow-down'></span></a></p>";
		}	
	}

	// File entity delete
	if($form['#form_id'] == 'file_entity_delete_form') {
		
		$file = file_load(arg(1));
		
		// Prevent file deletion if file is in use
	  if ($references = file_usage_list($file)) {
		  drupal_set_message("Du kan ikke slette denne fil, da den bliver brugt et sted på hjemmesiden.", "error");
		  
			unset($form['actions']['submit']);
						
			$description = "<p>Før du kan slette den, skal du fjerne alle links og andre referencer til filen.";
			$description .= " Klik her for at ".l("se en oversigt over hvor filen er i brug", "file/".arg(1)."/usage").".</p>";
			
			$form["description"] = array(
				"#markup" => $description
			);
		}
	}
	
	// File entity delete multiple
	else if($form['#form_id'] == 'file_entity_multiple_delete_confirm') {
		
		$in_use = FALSE;
				
		foreach($form['files'] as $fid => $file) {
			if(is_integer($fid)) {
				$file = file_load($fid);
				if ($references = file_usage_list($file)) {
					$in_use = TRUE;
					$form['files'][$fid]['#prefix'] = '<li class="error" style="font-weight: bold;">'; 
				}
			}
		}
		
		if($in_use) {
			unset($form['actions']['submit']);
	
			drupal_set_message("Du kan ikke slette disse filer, da en eller flere af dem bliver brugt et sted på hjemmesiden.", "error");
			
			$description = "Før du kan slette dem, skal du fjerne alle links og andre referencer til filerne.";
			
			$form["description"] = array(
				"#markup" => $description
			);
		}
	}
}

/**
 * Implements hook_menu_alter().
 */
function media_browser_ux_menu_alter(&$items) {
	
	// Disable the default file lists / views
  $items['admin/content/file']['access callback'] = FALSE;
  $items['admin/content/file/thumbnails']['access callback'] = FALSE;
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function media_browser_ux_menu_local_tasks_alter(&$data, $router_item, $root_path) {
	if($root_path=="admin/content/file") {
		
		foreach($data['actions']['output'] as $key => $action) {
			switch($action['#link']['path']) {
				case "file/add": 
					$data['actions']['output'][$key]['#weight'] = 0;
					$data['actions']['output'][$key]['#link']['title'] = "+ Upload filer";
					$data['actions']['output'][$key]['#link']['localized_options']['attributes']['class'] = "upload-button";
				break;
				case "admin/content/file/import":
					$data['actions']['output'][$key]['#weight'] = 1;
				break;
			}
		}
	}
}

/**
 * Implements hook_module_implements_alter().
 */
function media_browser_ux_module_implements_alter(&$implementations, $hook) {
	
  // Remove media_browser_plus implementation of hook_taxonomy_term_delete().
	if($hook == "taxonomy_term_delete" && is_array($implementations)) {
		unset($implementations['media_browser_plus']);
	}
}