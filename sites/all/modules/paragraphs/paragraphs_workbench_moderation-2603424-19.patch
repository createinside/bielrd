diff --git a/ParagraphsItemEntity.inc b/ParagraphsItemEntity.inc
index ef6fd51..f0de179 100644
--- a/ParagraphsItemEntity.inc
+++ b/ParagraphsItemEntity.inc
@@ -291,10 +291,9 @@ class ParagraphsItemEntity extends Entity {
         // For saved paragraphs, query the field data to determine the
         // right host entity.
         $query = new EntityFieldQuery();
-        $query->fieldCondition($this->fieldInfo(), 'revision_id', $this->revision_id);
-        if (!$this->isInUse()) {
-          $query->age(FIELD_LOAD_REVISION);
-        }
+        $query->fieldCondition($this->fieldInfo(), 'revision_id', $this->revision_id)
+              ->age(FIELD_LOAD_REVISION);
+
         $result = $query->execute();
         list($this->hostEntityType, $data) = each($result);
 
@@ -306,14 +305,7 @@ class ParagraphsItemEntity extends Entity {
           $this->hostEntityId = (isset($data_values->{$host_entity_keys['id']}) ? $data_values->{$host_entity_keys['id']} : NULL);
           $this->hostEntityRevisionId = (isset($data_values->{$host_entity_keys['revision']}) ? $data_values->{$host_entity_keys['revision']} : NULL);
           $this->hostEntityBundle = (isset($data_values->{$host_entity_keys['bundle']}) ? $data_values->{$host_entity_keys['bundle']} : NULL);
-
-          if ($this->isInUse()) {
-            $this->hostEntity = entity_load_single($this->hostEntityType, $this->hostEntityId);
-          }
-          elseif ($this->hostEntityRevisionId) {
-            $this->hostEntity = entity_revision_load($this->hostEntityType, $this->hostEntityRevisionId);
-          }
-
+          $this->hostEntity = entity_revision_load($this->hostEntityType, $this->hostEntityRevisionId);
           $this->fetchedHostEntityDetails = TRUE;
         }
         else {
diff --git a/paragraphs.module b/paragraphs.module
index 47093b6..2258a77 100644
--- a/paragraphs.module
+++ b/paragraphs.module
@@ -717,6 +717,12 @@ function paragraphs_field_settings_form($field, $instance) {
  * creation or to save changes to the host entity and its collections at once.
  */
 function paragraphs_field_presave($host_entity_type, $host_entity, $field, $instance, $langcode, &$items) {
+  // Prevent workbench moderation from deleting paragraphs on node_save() during
+  // workbench_moderation_store(), when $host_entity->revision == 0.
+  if (!empty($host_entity->workbench_moderation['updating_live_revision'])) {
+    return;
+  }
+
   foreach ($items as $key => &$item) {
     // In case the entity has been changed / created, save it and set the id.
     // If the host entity creates a new revision, save new item-revisions as
